<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="7" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-10T00:23:56 IST" name="Suite" finished-at="2023-01-10T00:24:37 IST" duration-ms="41193">
    <groups>
    </groups>
    <test started-at="2023-01-10T00:23:56 IST" name="Test" finished-at="2023-01-10T00:24:37 IST" duration-ms="41193">
      <class name="extentReportCreation.Testcase1">
        <test-method is-config="true" signature="BS()[pri:0, instance:extentReportCreation.Testcase1@4145bad8]" started-at="2023-01-10T00:23:56 IST" name="BS" finished-at="2023-01-10T00:23:56 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BS -->
        <test-method is-config="true" signature="BT()[pri:0, instance:extentReportCreation.Testcase1@4145bad8]" started-at="2023-01-10T00:23:56 IST" name="BT" finished-at="2023-01-10T00:23:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BT -->
        <test-method is-config="true" signature="BC()[pri:0, instance:extentReportCreation.Testcase1@4145bad8]" started-at="2023-01-10T00:23:56 IST" name="BC" finished-at="2023-01-10T00:23:58 IST" duration-ms="1913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method is-config="true" signature="BM()[pri:0, instance:extentReportCreation.Testcase1@4145bad8]" started-at="2023-01-10T00:23:58 IST" name="BM" finished-at="2023-01-10T00:24:07 IST" duration-ms="8723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="testcase1()[pri:0, instance:extentReportCreation.Testcase1@4145bad8]" started-at="2023-01-10T00:24:07 IST" name="testcase1" finished-at="2023-01-10T00:24:07 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:extentReportCreation.Testcase1@4145bad8]" started-at="2023-01-10T00:24:07 IST" name="AM" finished-at="2023-01-10T00:24:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:extentReportCreation.Testcase1@4145bad8]" started-at="2023-01-10T00:24:07 IST" name="AC" finished-at="2023-01-10T00:24:07 IST" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
        <test-method is-config="true" signature="AS()[pri:0, instance:extentReportCreation.Testcase1@4145bad8]" started-at="2023-01-10T00:24:37 IST" name="AS" finished-at="2023-01-10T00:24:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
        <test-method is-config="true" signature="AT()[pri:0, instance:extentReportCreation.Testcase1@4145bad8]" started-at="2023-01-10T00:24:37 IST" name="AT" finished-at="2023-01-10T00:24:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
      </class> <!-- extentReportCreation.Testcase1 -->
      <class name="extentReportCreation.Testcase3">
        <test-method is-config="true" signature="BC()[pri:0, instance:extentReportCreation.Testcase3@2a7f1f10]" started-at="2023-01-10T00:24:14 IST" name="BC" finished-at="2023-01-10T00:24:15 IST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method is-config="true" signature="BM()[pri:0, instance:extentReportCreation.Testcase3@2a7f1f10]" started-at="2023-01-10T00:24:15 IST" name="BM" finished-at="2023-01-10T00:24:37 IST" duration-ms="21615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method is-config="true" signature="AM()[pri:0, instance:extentReportCreation.Testcase3@2a7f1f10]" started-at="2023-01-10T00:24:37 IST" name="AM" finished-at="2023-01-10T00:24:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:extentReportCreation.Testcase3@2a7f1f10]" started-at="2023-01-10T00:24:37 IST" name="AC" finished-at="2023-01-10T00:24:37 IST" duration-ms="310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
        <test-method signature="testcase3()[pri:0, instance:extentReportCreation.Testcase3@2a7f1f10]" started-at="2023-01-10T00:24:37 IST" name="testcase3" finished-at="2023-01-10T00:24:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
      </class> <!-- extentReportCreation.Testcase3 -->
      <class name="extentReportCreation.Testcaseforbase">
        <test-method is-config="true" signature="configBS()[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20]" started-at="2023-01-10T00:23:56 IST" name="configBS" finished-at="2023-01-10T00:23:56 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBS -->
        <test-method is-config="true" signature="configBT()[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20]" started-at="2023-01-10T00:23:56 IST" name="configBT" finished-at="2023-01-10T00:23:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBT -->
        <test-method is-config="true" signature="configBC()[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20]" started-at="2023-01-10T00:24:07 IST" name="configBC" finished-at="2023-01-10T00:24:09 IST" duration-ms="1322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="setUp(org.testng.ITestResult)[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20]" started-at="2023-01-10T00:24:09 IST" name="setUp" finished-at="2023-01-10T00:24:13 IST" duration-ms="4879" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testcaseforbase.testcasebase()[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testcasebase()[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20]" started-at="2023-01-10T00:24:13 IST" name="testcasebase" finished-at="2023-01-10T00:24:14 IST" duration-ms="105" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at extentReportCreation.Testcaseforbase.testcasebase(Testcaseforbase.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcasebase -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20]" started-at="2023-01-10T00:24:14 IST" name="tearDown" finished-at="2023-01-10T00:24:14 IST" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testcasebase status=FAILURE method=Testcaseforbase.testcasebase()[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20]" started-at="2023-01-10T00:24:14 IST" name="configAC" finished-at="2023-01-10T00:24:14 IST" duration-ms="682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method is-config="true" signature="configAS()[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20]" started-at="2023-01-10T00:24:37 IST" name="configAS" finished-at="2023-01-10T00:24:37 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAS -->
        <test-method is-config="true" signature="configAT()[pri:0, instance:extentReportCreation.Testcaseforbase@298a5e20]" started-at="2023-01-10T00:24:37 IST" name="configAT" finished-at="2023-01-10T00:24:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAT -->
      </class> <!-- extentReportCreation.Testcaseforbase -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
